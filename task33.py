# todo:
#     Напишите программу, которая определяет и печатает «похожие» слова. Слово называется похожим на другое слово,
#     если его гласные буквы находятся там же, где находятся гласные буквы другого слова, например:
#     дорога и пароход - похожие слова (гласные буквы на втором, четвертом и шестом местах),
#     станок и прыжок - похожие слова, питон и удав непохожие слова.
#     Считаем, что в русском языке 10 гласных букв (а, у, о, ы, и, э, я, ю, ё, е).
#     Ввод: x –первое слово, например, питон. n – количество слов для сравнения, например 6.
#     Дальше вводятся 6 слов, например: поросенок, титан, итог, лавка, погост, кино.
#     Вывод - слова, похожие на питон: титан, погост, кино

# 1. Составляем список гласных букв. В будущем мы будем проверять буквы, ялвяются ли они гласными или нет Мы в
# принципе с самого начала выдать индексы всех гласных букв в слове.
# 2. Каждое новое введенное слово падает в список
# 3. Просматриваем список введенных слов. Для каждого нового слова ищем индексы гласных букв. Потом сравниваем, что у
# нас совпадает список с "эталоном" (введенное первым слово). Если все совпадает - запоминаем это слово в другой список

def get_vowel_idxs(str):
    global vowels
    return tuple([idx for idx, vowel in enumerate(str) if vowel in vowels])


vowels = tuple('а, у, о, ы, и, э, я, ю, ё, е'.split(', '))
print(vowels)

first_word = 'питон'
vowels_idxs_in_first_word = get_vowel_idxs(first_word)
print(vowels_idxs_in_first_word)

words = [word for word in input('Введите список слов через запятую и пробел: ').split(', ')]

similar_words = []
for word in words:
    vowels_in_word = get_vowel_idxs(word)
    if vowels_idxs_in_first_word == vowels_in_word:
        similar_words.append(word)

print(f'Похожие слова на {first_word}: {", ".join(map(str, similar_words))}')
